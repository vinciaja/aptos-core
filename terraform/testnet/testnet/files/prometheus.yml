global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    chain_name: {{ .Values.chain_name }}

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - localhost:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
{{- range $path, $_ := .Files.Glob "files/rules/*.yml" }}
  - {{ base $path }}
{{- end }}

scrape_configs:
{{- if .Values.validatorLite }}
- job_name: 'validator-lite'

  static_configs:
  {{- range $i, $e := .Values.genesis.numValidators | int | until }}
  - targets: {{ printf "val%d-aptos-validator-validator-lb:9101" $i | quote | list }}
    labels:
      owner: {{ printf "val%d" $i | quote }}
      role: 'validator'
  {{- end }}

{{- else }}
- job_name: 'validators'
  scheme: {{ ternary "https" "http" $.Values.monitoring.prometheus.useHttps }}
  tls_config:
    insecure_skip_verify: true
  metrics_path: '/federate'
  params:
    'match[]':
      - '{job="aptos-procs"}'
      - '{job="kubernetes-cadvisor"}'
      - '{job="kubernetes-nodes"}'
      - '{job="pushgateway"}'

  static_configs:
  {{- range $i, $e := .Values.genesis.numValidators | int | until }}
  - targets: {{ printf "val%d-aptos-validator-monitoring:443" $i | quote | list }}
    labels:
      owner: {{ printf "val%d" $i | quote }}
  {{- end }}
{{- end }}

- job_name: 'public-fullnodes'

  static_configs:
  {{- range $i, $e := .Values.genesis.numPublicFullnodes | int | until }}
  - targets: {{ printf "pfn%d-aptos-fullnode:9101" $i | quote | list }}
    labels:
      owner: {{ printf "pfn%d" $i | quote }}
  {{- end }}

- job_name: 'kubernetes-apiservers'
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  kubernetes_sd_configs:
  - role: endpoints

  # Keep only the default/kubernetes service endpoints for the https port. This
  # will add targets for each API server which Kubernetes adds an endpoint to
  # the default/kubernetes service.
  relabel_configs:
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
    action: keep
    regex: default;kubernetes;https

- job_name: 'kubernetes-nodes'
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  kubernetes_sd_configs:
  - role: node

  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __address__
    replacement: kubernetes.default.svc:443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics

- job_name: 'kubernetes-cadvisor'
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  kubernetes_sd_configs:
  - role: node

  relabel_configs:
  - target_label: __address__
    replacement: kubernetes.default.svc:443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

- job_name: "vault"

  scheme: {{ ternary "http" "https" .Values.localVaultBackend }}

  tls_config:
    insecure_skip_verify: true
  metrics_path: "/v1/sys/metrics"
  params:
    format: ["prometheus"]

  static_configs:
  {{- if .Values.localVaultBackend }}
  {{- range $i, $e := .Values.genesis.numValidators | int | until }}
  - targets: {{ printf "val%d-aptos-validator-vault:8200" $i | quote | list }}
    labels:
      owner: {{ printf "val%d" $i | quote }}
  {{- end }}
  {{- end }}
  - targets: ['{{ .Values.vault.prometheusTarget }}']

{{ if .Values.monitoring.prometheus.remote_write.enabled }}
{{ with .Values.monitoring.prometheus.remote_write }}
remote_write:
  - url: {{ .url }}
    sigv4:
      region: {{ .region }}
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
{{ end }}
{{ end }}